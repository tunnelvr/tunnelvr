[gd_scene load_steps=9 format=2]

[ext_resource path="res://lightweighttextures/yellowchecker.png" type="Texture" id=1]

[sub_resource type="BoxShape" id=1]
extents = Vector3( 0.1, 0.1, 0.1 )

[sub_resource type="CubeMesh" id=2]
resource_local_to_scene = true
size = Vector3( 0.2, 0.2, 0.2 )

[sub_resource type="SpatialMaterial" id=3]
albedo_color = Color( 0.286275, 0.87451, 0.145098, 1 )

[sub_resource type="SpatialMaterial" id=4]
flags_no_depth_test = true
albedo_color = Color( 0.945098, 0.0588235, 0.870588, 1 )

[sub_resource type="QuadMesh" id=5]
resource_local_to_scene = true
material = SubResource( 4 )
size = Vector2( 1.9, 0.3 )

[sub_resource type="Shader" id=6]
code = "shader_type spatial;
render_mode blend_mix,cull_disabled,diffuse_burley,specular_schlick_ggx,unshaded,shadows_disabled;
uniform vec4 albedo : hint_color;
uniform sampler2D texture_albedo : hint_albedo;
uniform float specular;
uniform float metallic;
uniform float roughness : hint_range(0,1);
uniform float point_size : hint_range(0,128);
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;
uniform vec3 vertex_offset;
uniform float vertexyinvert = 1.0;
uniform float vertex_scale = 1.0;

void vertex() {
	UV=UV*uv1_scale.xy+uv1_offset.xy;
	MODELVIEW_MATRIX = INV_CAMERA_MATRIX * mat4(CAMERA_MATRIX[0],CAMERA_MATRIX[1],CAMERA_MATRIX[2],WORLD_MATRIX[3]);
	VERTEX.y *= vertexyinvert; 
	VERTEX = (VERTEX + vertex_offset)*vertex_scale;
}


void fragment() {
	vec2 base_uv = UV;
	vec4 albedo_tex = texture(texture_albedo,base_uv);
	ALBEDO = albedo.rgb * albedo_tex.rgb;
	METALLIC = metallic;
	ROUGHNESS = roughness;
	SPECULAR = specular;
}
"

[sub_resource type="ShaderMaterial" id=7]
resource_local_to_scene = true
shader = SubResource( 6 )
shader_param/albedo = Color( 1, 1, 1, 1 )
shader_param/specular = 0.5
shader_param/metallic = 0.0
shader_param/roughness = 1.0
shader_param/point_size = 1.0
shader_param/uv1_scale = Vector3( 1, 1, 1 )
shader_param/uv1_offset = Vector3( 0, 0, 0 )
shader_param/uv2_scale = Vector3( 1, 1, 1 )
shader_param/uv2_offset = Vector3( 0, 0, 0 )
shader_param/vertex_offset = Vector3( -1.05, 0.15, 0 )
shader_param/vertexyinvert = 1.0
shader_param/vertex_scale = 1.0
shader_param/texture_albedo = ExtResource( 1 )

[node name="XCnode" type="StaticBody"]
collision_layer = 128
collision_mask = 0

[node name="CollisionShape" type="CollisionShape" parent="."]
transform = Transform( 0.707107, -0.707107, 0, 0.5, 0.5, -0.707107, 0.5, 0.5, 0.707107, 0, 0, 0 )
shape = SubResource( 1 )

[node name="MeshInstance" type="MeshInstance" parent="CollisionShape"]
layers = 513
cast_shadow = 0
mesh = SubResource( 2 )
material/0 = SubResource( 3 )

[node name="StationLabel" type="MeshInstance" parent="."]
transform = Transform( 1, 0, 0, 0, -1.62921e-07, 1, 0, -1, -1.62921e-07, 0, 0, 0 )
layers = 8192
cast_shadow = 0
mesh = SubResource( 5 )
material/0 = SubResource( 7 )
